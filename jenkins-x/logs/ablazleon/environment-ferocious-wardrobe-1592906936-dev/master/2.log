
Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-credential-initializer-6mc8z[0m
{"level":"info","ts":1592913723.6956067,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1592913723.695968,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-working-dir-initializer-nmkjp[0m
{"level":"info","ts":1592913724.7126536,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1592913724.7134643,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully executed command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-place-tools[0m

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-git-source-ablazleon-environment-ferocious-tvsmz-pqf7r[0m
{"level":"info","ts":1592913731.8340786,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1592913732.2812676,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/*********/environment-ferocious-wardrobe-1592906936-dev.git @ v0.0.2 in path /workspace/source"}

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:d5beea314af5ff690c2efd46ad3bdc657e1a68cb
WARNING: no SHAs to merge, falling back to initial cloned commit

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-validate-git[0m
Git configured for user: jenkins-x-bot and email jenkins-x@googlegroups.com

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-verify-preinstall[0m
writing the following to the OWNERS file for the development environment repository:
approvers:
- *********
reviewers:
- *********
WARNING: TLS is not enabled so your webhooks will be called using HTTP. This means your webhook secret will be sent to your cluster in the clear. See https://jenkins-x.io/docs/getting-started/setup/boot/#ingress for more information
Verifying the kubernetes cluster before we try to boot Jenkins X in namespace: **
Trying to lazily create any missing resources to get the current cluster ready to boot Jenkins X
Verifying Ingress...
Clearing the domain 44.232.125.138.nip.io as when using auto-DNS domains we need to regenerate to ensure its always accurate in case the cluster or ingress service is recreated

Using namespace '**' from context named '' on server ''.

Installing kubectl
Downloading https://storage.googleapis.com/kubernetes-release/release/v1.13.2/bin/linux/amd64/kubectl to /builder/home/.**/bin/kubectl...
Downloaded /builder/home/.**/bin/kubectl
Installing helm
Downloading https://get.helm.sh/helm-v2.12.2-linux-amd64.tar.gz to /builder/home/.**/bin/helm.tgz...
Downloaded /builder/home/.**/bin/helm.tgz
Installing helm secrets plugin
Verifying the CLI packages using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: v1.0.507
using version 2.1.78 of **
CLI packages kubectl, git, helm seem to be setup correctly
NAME                          VERSION
Kubernetes cluster            v1.16.8-eks-e16311
kubectl (installed in JX_BIN) v1.13.2
helm client                   2.12.2
git                           2.21.1

Verifying Storage...
WARNING: Your requirements have not enabled cloud storage for logs - we recommend enabling this for kubernetes provider eks
WARNING: Your requirements have not enabled cloud storage for reports - we recommend enabling this for kubernetes provider eks
WARNING: Your requirements have not enabled cloud storage for repository - we recommend enabling this for kubernetes provider eks
WARNING: Your requirements have not enabled cloud storage for backup - we recommend enabling this for kubernetes provider eks
Storage configuration looks good

Helm installed and configured
Ensuring Helm chart repository https://storage.googleapis.com/chartmuseum.jenkins-x.io is configured
verified there is a ConfigMap config in namespace **
verified there is a ConfigMap plugins in namespace **
Running in cluster, not recreating permissions
Cluster looks good, you are ready to '** boot' now!


Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-jx-crds[0m
Jenkins X CRDs upgraded with success

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-velero[0m
Modified file /workspace/source/systems/velero/Chart.yaml to set the chart to version 2
creating the lock configmap **-lock-velero
lock configmap **-lock-velero created
cleaning the lock configmap **-lock-velero

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-velero-backups[0m
Modified file /workspace/source/systems/velero-backups/Chart.yaml to set the chart to version 2
creating the lock configmap **-lock-velero
lock configmap **-lock-velero created
Ignoring templates/default-backup.yaml
No requirements file: /tmp/**-helm-apply-983558778/velero-backups/requirements.yaml so not checking for missing versions
cleaning the lock configmap **-lock-velero

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-nginx-controller[0m
Modified file /workspace/source/systems/**ing/Chart.yaml to set the chart to version 2
creating the lock configmap **-lock-kube-system
lock configmap **-lock-kube-system created

cleaning the lock configmap **-lock-kube-system

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-create-install-values[0m
Waiting to find the external host name of the ingress controller Service in namespace kube-system with name **ing-nginx-ingress-controller
The Ingress address a38a3de8845c642a1b30102405cb3c26-e699c02cb417d284.elb.us-west-2.amazonaws.com is not an IP address. We recommend we try resolve it to a public IP address and use that for the domain to access services externally.
Waiting for a38a3de8845c642a1b30102405cb3c26-e699c02cb417d284.elb.us-west-2.amazonaws.com to be resolvable to an IP address...
a38a3de8845c642a1b30102405cb3c26-e699c02cb417d284.elb.us-west-2.amazonaws.com resolved to IP 44.233.102.140
No domain flag provided so using default 44.233.102.140.nip.io to generate Ingress rules
defaulting the domain to 44.233.102.140.nip.io and modified /workspace/source/**-requirements.yml

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-external-dns[0m
Modified file /workspace/source/systems/external-dns/Chart.yaml to set the chart to version 2
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Adding missing Helm repo: charts.bitnami.com https://charts.bitnami.com/bitnami
Successfully added Helm repository charts.bitnami.com.
cleaning the lock configmap **-lock-**

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-cert-manager-crds[0m
customresourcedefinition.apiextensions.k8s.io/challenges.acme.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/orders.acme.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/certificaterequests.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/certificates.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/clusterissuers.cert-manager.io configured
customresourcedefinition.apiextensions.k8s.io/issuers.cert-manager.io configured

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-cert-manager[0m
Modified file /workspace/source/systems/cm/Chart.yaml to set the chart to version 2
creating the lock configmap **-lock-cert-manager
lock configmap **-lock-cert-manager created
Adding missing Helm repo: charts.jetstack.io https://charts.jetstack.io
Successfully added Helm repository charts.jetstack.io.
cleaning the lock configmap **-lock-cert-manager

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-acme-issuer-and-certificate[0m
Modified file /workspace/source/systems/acme/Chart.yaml to set the chart to version 2
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/cert-manager-prod-certificate.yaml
Ignoring templates/cert-manager-prod-issuer.yaml
Ignoring templates/cert-manager-staging-certificate.yaml
Ignoring templates/cert-manager-staging-issuer.yaml
No requirements file: /tmp/**-helm-apply-349745346/acme/requirements.yaml so not checking for missing versions
cleaning the lock configmap **-lock-**

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-vault[0m
Not attempting to boot Vault as using secret storage: local

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-create-helm-values[0m
defaulting to secret storage scheme local found from requirements file at /workspace/source/**-requirements.yml
defaulting to secret base path to the cluster name ferocious-wardrobe-1592906936 found from requirements file at /workspace/source/**-requirements.yml
generated schema file /workspace/source/env/parameters.schema.json from template /workspace/source/env/parameters.tmpl.schema.json
Jenkins X Admin Username ***** [Automatically accepted existing value]
Jenkins X Admin Password *** [Automatically accepted existing value]
Pipeline bot Git username ********* [Automatically accepted existing value]
Pipeline bot Git email address *********@gmail.com [Automatically accepted existing value]
Pipeline bot Git token *** [Automatically accepted existing value]
HMAC token, used to validate incoming webhooks. Press enter to use the generated token *** [Automatically accepted existing value]
Do you want to configure non default Docker Registry? true [Automatically accepted existing value]
Docker Registry Url https://hub.docker.com/ [Automatically accepted existing value]
Docker Registry username ********* [Automatically accepted existing value]
Docker Registry password *** [Automatically accepted existing value]
Docker Registry email *********@gmail.com [Automatically accepted existing value]
WARNING: Unexpected registry auth URL https://hub.docker.com/ - using it as registry push URL

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-create-jx-auth-config[0m
Saved the rendered configuration into templates/**-auth-configmap.yaml file

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-jx-auth-config[0m
Modified file /workspace/source/systems/**-auth/Chart.yaml to set the chart to version 2
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/**-auth-configmap.yaml
No requirements file: /tmp/**-helm-apply-932837745/**-auth/requirements.yaml so not checking for missing versions
cleaning the lock configmap **-lock-**

Showing logs for build [32mablazleon-environment-ferocious-tvsmz-2[0m stage [32mrelease[0m and container [32mstep-install-jenkins-x[0m
Modified file /workspace/source/env/Chart.yaml to set the chart to version 2
creating the lock configmap **-lock-**
lock configmap **-lock-** created
Ignoring templates/.gitignore
Applying the kubernetes overrides at ../kubeProviders/eks/values.tmpl.yaml
Adding missing Helm repo: chartmuseum.jenkins-x.io http://chartmuseum.jenkins-x.io
Successfully added Helm repository chartmuseum.jenkins-x.io.
cleaning the lock configmap **-lock-**
error: upgrading helm chart '.': failed to run 'kubectl apply --recursive -f /tmp/helm-template-workdir-945768857/jenkins-x/output/namespaces/** -l jenkins.io/chart-release=jenkins-x --namespace ** --wait --validate=false' command in directory '/tmp/**-helm-apply-205292865/env', output: 'deployment.apps/jenkins-x-chartmuseum configured
persistentvolumeclaim/jenkins-x-chartmuseum configured
secret/jenkins-x-chartmuseum configured
service/jenkins-x-chartmuseum configured
role.rbac.authorization.k8s.io/cleanup configured
rolebinding.rbac.authorization.k8s.io/cleanup configured
serviceaccount/cleanup configured
clusterrole.rbac.authorization.k8s.io/controllerbuild-** configured
clusterrolebinding.rbac.authorization.k8s.io/controllerbuild-** configured
deployment.apps/jenkins-x-controllerbuild configured
release.jenkins.io/controllerbuild-2.1.78 configured
role.rbac.authorization.k8s.io/controllerbuild configured
rolebinding.rbac.authorization.k8s.io/controllerbuild configured
serviceaccount/jenkins-x-controllerbuild configured
clusterrole.rbac.authorization.k8s.io/controllerrole-** configured
clusterrolebinding.rbac.authorization.k8s.io/controllerrole-** configured
deployment.apps/jenkins-x-controllerrole configured
release.jenkins.io/controllerrole-2.1.78 configured
role.rbac.authorization.k8s.io/controllerrole configured
rolebinding.rbac.authorization.k8s.io/controllerrole configured
serviceaccount/jenkins-x-controllerrole configured
role.rbac.authorization.k8s.io/expose configured
rolebinding.rbac.authorization.k8s.io/expose configured
serviceaccount/expose configured
clusterrole.rbac.authorization.k8s.io/gcactivities-** configured
clusterrolebinding.rbac.authorization.k8s.io/gcactivities-** configured
cronjob.batch/jenkins-x-gcactivities configured
release.jenkins.io/gcactivities-2.1.78 configured
role.rbac.authorization.k8s.io/gcactivities configured
rolebinding.rbac.authorization.k8s.io/gcactivities configured
serviceaccount/jenkins-x-gcactivities configured
cronjob.batch/jenkins-x-gcpods configured
release.jenkins.io/gcpods-2.1.78 configured
role.rbac.authorization.k8s.io/gcpods configured
rolebinding.rbac.authorization.k8s.io/gcpods configured
serviceaccount/jenkins-x-gcpods configured
clusterrole.rbac.authorization.k8s.io/gcpreviews-** configured
clusterrolebinding.rbac.authorization.k8s.io/gcpreviews-** configured
cronjob.batch/jenkins-x-gcpreviews configured
release.jenkins.io/gcpreviews-2.1.78 configured
role.rbac.authorization.k8s.io/gcpreviews configured
rolebinding.rbac.authorization.k8s.io/gcpreviews configured
serviceaccount/jenkins-x-gcpreviews configured
deployment.apps/jenkins-x-heapster configured
clusterrolebinding.rbac.authorization.k8s.io/jenkins-x-heapster configured
role.rbac.authorization.k8s.io/jenkins-x-heapster-pod-nanny configured
rolebinding.rbac.authorization.k8s.io/jenkins-x-heapster-pod-nanny configured
service/heapster configured
serviceaccount/jenkins-x-heapster configured
configmap/nexus configured
deployment.apps/jenkins-x-nexus configured
persistentvolumeclaim/jenkins-x-nexus configured
secret/nexus configured
service/nexus configured
role.rbac.authorization.k8s.io/committer configured
secret/jenkins-docker-cfg configured
configmap/jenkins-x-devpod-config configured
configmap/jenkins-x-docker-registry configured
configmap/jenkins-x-extensions configured
configmap/jenkins-x-pod-template-dlang configured
secret/**-basic-auth configured
role.rbac.authorization.k8s.io/**-view configured
secret/jenkins-maven-settings configured
secret/jenkins-npm-token configured
role.rbac.authorization.k8s.io/owner configured
secret/jenkins-release-gpg configured
secret/jenkins-ssh-config configured
role.rbac.authorization.k8s.io/viewer configured
configmap/jenkins-x-pod-template-dotnet configured
configmap/jenkins-x-pod-template-maven-nodejs configured
configmap/jenkins-x-pod-template-python37 configured
configmap/jenkins-x-pod-template-maven configured
configmap/jenkins-x-pod-template-promote configured
configmap/jenkins-x-pod-template-php5x configured
configmap/jenkins-x-pod-template-**-base configured
configmap/jenkins-x-pod-template-nodejs12x configured
configmap/jenkins-x-pod-template-swift configured
configmap/jenkins-x-pod-template-newman configured
configmap/jenkins-x-pod-template-ruby configured
configmap/jenkins-x-pod-template-maven-graalvm configured
configmap/jenkins-x-pod-template-python configured
configmap/jenkins-x-pod-template-php7x configured
configmap/jenkins-x-pod-template-go configured
configmap/jenkins-x-pod-template-machine-learning configured
configmap/jenkins-x-pod-template-nodejs8x configured
configmap/jenkins-x-pod-template-terraform configured
configmap/jenkins-x-pod-template-nodejs configured
configmap/jenkins-x-pod-template-rust configured
configmap/jenkins-x-pod-template-maven-java11 configured
configmap/jenkins-x-pod-template-python2 configured
configmap/jenkins-x-pod-template-machine-learning-gpu configured
configmap/jenkins-x-pod-template-packer configured
configmap/jenkins-x-pod-template-aws-cdk configured
configmap/jenkins-x-pod-template-gradle configured
configmap/jenkins-x-pod-template-nodejs10x configured
configmap/jenkins-x-pod-template-scala configured
role.rbac.authorization.k8s.io/**ui-cleanup created
rolebinding.rbac.authorization.k8s.io/**ui-cleanup created
serviceaccount/**ui-cleanup created
service/jenkins-x-**ui-metrics created
clusterrolebinding.rbac.authorization.k8s.io/jenkins-x-**ui created
service/**ui created
Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply
serviceaccount/**ui configured
environmentrolebinding.jenkins.io/single-user created
serviceaccount/single-user created
app.jenkins.io/jenkins-x-**-app-ui created
namespace/** configured
ingress.extensions/jenkins-x-chartmuseum configured
ingress.extensions/hook configured
ingress.extensions/nexus configured
scheduler.jenkins.io/default-scheduler configured
environment.jenkins.io/dev configured
sourcerepository.jenkins.io/*********-environment-ferocious-wardrobe-1592906936-dev configured
scheduler.jenkins.io/env-scheduler configured
secret/**-pipeline-git-github-github configured
configmap/ingress-config configured
scheduler.jenkins.io/pr-only configured
environment.jenkins.io/production configured
sourcerepository.jenkins.io/*********-environment-ferocious-wardrobe-1592906936-production configured
scheduler.jenkins.io/release-only configured
environment.jenkins.io/staging configured
sourcerepository.jenkins.io/*********-environment-ferocious-wardrobe-1592906936-staging configured
deployment.apps/lighthouse-foghorn configured
rolebinding.rbac.authorization.k8s.io/lighthouse-foghorn configured
role.rbac.authorization.k8s.io/lighthouse-foghorn configured
serviceaccount/lighthouse-foghorn configured
cronjob.batch/lighthouse-gc-jobs configured
rolebinding.rbac.authorization.k8s.io/lighthouse-gc-jobs configured
role.rbac.authorization.k8s.io/lighthouse-gc-jobs configured
serviceaccount/lighthouse-gc-jobs configured
secret/lighthouse-hmac-token configured
deployment.apps/lighthouse-keeper configured
rolebinding.rbac.authorization.k8s.io/lighthouse-keeper configured
role.rbac.authorization.k8s.io/lighthouse-keeper configured
serviceaccount/lighthouse-keeper configured
service/lighthouse-keeper configured
customresourcedefinition.apiextensions.k8s.io/lighthousejobs.lighthouse.jenkins.io configured
secret/lighthouse-oauth-token configured
deployment.apps/lighthouse-webhooks configured
rolebinding.rbac.authorization.k8s.io/lighthouse-webhooks configured
role.rbac.authorization.k8s.io/lighthouse-webhooks configured
serviceaccount/lighthouse-webhooks configured
service/hook configured
podsecuritypolicy.policy/tekton-pipelines configured
clusterrole.rbac.authorization.k8s.io/tekton-pipelines configured
clusterrolebinding.rbac.authorization.k8s.io/tekton-pipelines-** configured
secret/knative-docker-user-pass configured
secret/knative-git-user-pass configured
serviceaccount/tekton-pipelines configured
serviceaccount/tekton-bot configured
customresourcedefinition.apiextensions.k8s.io/clustertasks.tekton.dev configured
customresourcedefinition.apiextensions.k8s.io/conditions.tekton.dev configured
customresourcedefinition.apiextensions.k8s.io/images.caching.internal.knative.dev configured
customresourcedefinition.apiextensions.k8s.io/pipelines.tekton.dev configured
customresourcedefinition.apiextensions.k8s.io/pipelineruns.tekton.dev configured
customresourcedefinition.apiextensions.k8s.io/pipelineresources.tekton.dev configured
customresourcedefinition.apiextensions.k8s.io/tasks.tekton.dev configured
customresourcedefinition.apiextensions.k8s.io/taskruns.tekton.dev configured
service/tekton-pipelines-controller configured
clusterrole.rbac.authorization.k8s.io/tekton-bot configured
clusterrolebinding.rbac.authorization.k8s.io/tekton-bot-** configured
role.rbac.authorization.k8s.io/tekton-bot configured
rolebinding.rbac.authorization.k8s.io/tekton-bot configured
clusterrole.rbac.authorization.k8s.io/tekton-aggregate-edit configured
clusterrole.rbac.authorization.k8s.io/tekton-aggregate-view configured
configmap/config-artifact-bucket configured
configmap/config-artifact-pvc configured
configmap/config-defaults configured
configmap/config-entrypoint configured
configmap/config-logging configured
configmap/config-observability configured
deployment.apps/tekton-pipelines-controller configured
error: unable to recognize "/tmp/helm-template-workdir-945768857/jenkins-x/output/namespaces/**/env/charts/**-app-ui/charts/**ui/templates/part0-deployment.yaml": no matches for kind "Deployment" in version "extensions/v1beta1"'
[31m
Pipeline failed on stage 'release' : container 'step-install-jenkins-x'. The execution of the pipeline has stopped.[0m
